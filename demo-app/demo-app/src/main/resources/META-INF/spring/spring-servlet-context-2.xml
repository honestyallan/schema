<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 by vincent.cn
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ 		http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframwork.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 定义扫描根路径，不使用默认的扫描方式 -->
	<context:component-scan base-package="cn.vincent" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="/index" />

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g./?locale=de -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>

	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory
    <mvc:resources mapping="/resources/**" location="/resources/,classpath:META-INF/resources/resources/" cache-period="-1" />
     -->

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10240000"/>
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="order" value="10" />
		<property name="viewNames" value="jsp1-*,test-*"/>
		<property name="contentType" value="text/html"/>
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="order" value="20" />
		<property name="viewNames" value="jsp2-*,test-*"/>
		<property name="contentType" value="text/html"/>
		<property name="prefix" value="/WEB-INF/jsp2/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- freemarker -->
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8"/>
		<property name="suffix" value=".html" />
		<property name="cache" value="true" />
		<property name="order" value="5"/>
		<property name="viewNames" value="freemarker-*,*test*,*exception*"/>
		<property name="allowRequestOverride" value="false" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="allowSessionOverride" value="false" />
		<property name="exposeSessionAttributes" value="true" />
		<!-- springMacroRequestContext -->
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposePathVariables" value="true" />
		<property name="requestContextAttribute" value="request" />
	</bean>

	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="preferFileSystemAccess" value="false" />
		<property name="templateLoaderPaths" value="/WEB-INF/freemarker/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="output_encoding">UTF-8</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="tag_syntax">auto_detect</prop><!-- 设置标签类型 两种：[] 和 <> 。[] 这种标记解析要快些 -->
				<prop key="classic_compatible">true</prop><!-- 可以满足一般需要。默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可  -->
				<prop key="template_exception_handler">html_debug</prop><!-- ignore,debug,html_debug,rethrow -->
			</props>
		</property>
	</bean>

	<!-- 内容协商处理 -->
	<!--
		1、检查扩展名（如my.pdf）；2、检查Parameter（如my?format=pdf）；3、检查Accept Header
	-->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!--  扩展名至mimeType的映射,即 /user.json => application/json  -->
		<property name="favorPathExtension" value="true"/>
		<!--  用于开启 /userinfo/123?format=json 的支持  -->
		<property name="favorParameter" value="true"/>
		<property name="parameterName" value="format"/>
		<!--  是否忽略Accept Header  -->
		<property name="ignoreAcceptHeader" value="false"/>
		<!--
		扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用
		-->
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html;charset=utf-8;q=0.9"/>
				<entry key="json" value="application/json;charset=utf-8;q=0.9"/>
				<entry key="jsonp" value="application/javascript;charset=utf-8;q=0.9"/>
				<entry key="xml" value="application/xml;charset=utf-8;q=0.9"/>
				<entry key="xsl" value="application/vnd.ms-excel;charset=utf-8;q=0.9"/>
				<entry key="pdf" value="application/pdf;charset=utf-8;q=0.9"/>
			</map>
		</property>
		<!--  默认的content type  -->
		<property name="defaultContentType" value="text/html"/>
	</bean>

	<bean id="marshaller" class="cn.vincent.demo.app.view.support.NoClassXStreamMarshaller">
		<property name="autodetectAnnotations" value="true"/>
		<property name="streamDriver">
			<bean class="cn.vincent.demo.app.view.support.CDATAXppDriver">
				<constructor-arg>
					<bean class="com.thoughtworks.xstream.io.naming.NoNameCoder" />
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
				<property name="marshaller" ref="marshaller" />
				<property name="unmarshaller" ref="marshaller" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="0" />
		<!-- 内容协商管理器 用于决定media type -->
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<!-- 默认视图 放在解析链最后 -->
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="extractValueFromSingleKeyModel" value="true" />
				</bean>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="marshaller" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 配置异常处理 -->
	<bean id="exceptionResolver" class="cn.vincent.demo.app.exception.handler.ExceptionResolver" />
	
</beans>